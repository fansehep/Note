### 欢神问题

- Redis 5.0 版本解析

1. Redis 使用的是非阻塞模型 .
2. Only one loop Only one Thread
3. Redis 没有使用多线程. 

   1. 但在后续版本中，解析请求用到了多线程。
4. 确实在我的意料之中.

   1. Redis 使用单线程是因为是一个内存数据库，我个人认为他单线程就已经很快了，而且一个纯正的单线程 Reactor 模型的性能速度已经很高了，如果使用多线程的话，我认为得不偿失，多线程会带来 额外的线程同步问题，一旦有了锁，条件变量那么这个同步所带来的性能损耗在一些情况下甚至还不如去用单线程。
5. 通信的协议是.
   1. Redis 客户端 和 服务器通信使用名为 RESP (REdis Serialization Protocol) 的协议，哪种手段？？？
6. 优势就是定制化通信协议，性能较高，自我描述性较差。客户端是优势，协议方便扩展。服务器升级后，不好说
7. 非阻塞模型的话，就要循环读，直到read 返回失败。
   1. 读 buf 和 写 buf 是通过
8. 默认是先执行读事件，再执行写事件。
9. 
10. redis 默认是最大支持 10000 连接的，当然你也可以在配置文件里面更改

11. IO 密集型，网络模型更注重本机的网络，磁盘，内存速率不是很能适应，在并发比较高的时候，单线程的epoll处理就比较慢，延迟也会比较高

12. 实现了，持久化分为 BDF 持久化 AOF 持久化。

    默认是做了一个均衡，AOF 持久化可以设置，默认是everysec 存储，如果我挂了，我最多只丢失 1 s 的数据，而且如果开启了  AOF 持久化，是不会使用BDF持久化的。

    为什么使用 2 种持久化方式呢？BDF 持久化是会在一个固定的时间去扫描整个数据库的，该持久化方式适合定期存档那种，比如复制，而且BDF持久化恢复的速度是快于AOF持久化的。

13. 内存存储，他这个不太算预写日志吧，因为他是执行完才会去执行AOF的。











